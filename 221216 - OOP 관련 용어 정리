라라벨 학습 시작
참고 도서 : 라라벨 실전 웹 애플리케이션 개발 (https://www.aladin.co.kr/shop/wproduct.aspx?ItemId=285421091)

라라벨 학습에 앞서 객체 지향 프로그래밍 기초부터 다지도록 하자

OOP(Object-Oriented Programming) 관련 용어 정리

객체(Object) : 속성과 기능을 가지는 프로그램 단위 (아직 실제가 아님)
클래스(Class) : 객체 지향 프로그래밍에서 특정 객체를 생성하기 위해 변수와 메소드(함수)를 정의하는 틀
인스턴스(Instance) : 클래스를 바탕으로 실체화되어 메모리에 할당된 실제 개체
인터페이스(Interface) : 다른 클래스를 작성할 때 기본이 되는 틀. 클래스 사이의 중간 매개 역할도 담당함.
패키지(Package) : 클래스, 인터페이스들의 모임. 이름처럼 묶음이라고 보면 됨.

생성자(Constructor) : 객체의 초기화를 담당하는 서브루틴. 객체가 처음 생성될 때 호출되어 멤버 변수를 초기화하고 필요에 따라 어떤 행위를 하기도 함. 객체 생성 시에 호출되기에 생성자라는 이름이 붙음.

추상클래스(Abstract Class) : 하나 이상의 추상 메소드를 포함한 클래스
추상화(Abstraction) : 공통된 행동(메서드), 필드를 묶어 하나의 클래스를 만드는 것
상속(Inheritance) : 기존 클래스의 변수와 메소드를 물려받아 새로운 클래스를 구성하는 것
접근 지정자 : 클래스 내에서 멤버의 접근을 제한하는 역할을 함
public 지정자 : 모든 접근을 허용함. 어떤 클래스가 접근을 하든 모두 허용함.
protected 지정자 : 상속받은 클래스 또는 같은 패키지에서만 접근이 가능함.
private 지정자 : 외부에서 접근이 불가능함. 같은 클래스 내에서만 접근이 가능함.
default : 아무것도 지정하지 않은 클래스. 자신 클래스 내부와 같은 패키지 내에서만 접근이 가능함.

멤버(Member) : 객체 지향 프로그래밍에서 하나의 클래스를 구성하는 개별적인 구성 요소를 말함. 변수(Variable), 메소드(Method), 클래스(Class)가 있음

오버로딩(Overloading) : 같은 이름의 메서드 여러 개를 가지면서 매개변수의 유형, 개수가 다르도록 사용할 수 있는 것.
오버라이딩(Overriding) : 부모 클래스의 메소드를 하위 클래스가 재정의해서 사용하는 것.


11월에 가상서버 결제함.
putty, vscode, ftp, github 설정 완료.
우분투에 아파치 웹서버, PHP, MariaDB, 컴포저 설치 및 기본 설정 완료.

리눅스에 Docker, 라라벨 세일을 설치하기 앞서 도커와 라라벨 세일이 뭔지 알아보자

도커(Docker) : 컨테이너(Container) 기반의 오픈소스 가상화 플랫폼. 다양한 프로그램, 실행환경을 컨테이너로 추상화하고 동일한 인터페이스를 제공하여 프로그램의 배포 및 관리를 단순하게 해주는 것.

컨테이너(Container) : 격리된 공간에서 프로세스가 동작하는 기술. 가상화 기술의 하나이다.

도커를 쓰게 되면 장점이 각 컨테이너를 실행하기 위한 모든 정보를 갖고 있기 때문에, 어떤 프로그램을 실행하기 위해 의존성 파일을 컴파일하고 이것저것 설치할 필요가 없게 된다. 즉, 서로 다른 컴퓨팅 환경에서 애플리케이션을 안정적으로 실행할 수 있게 해준다.



